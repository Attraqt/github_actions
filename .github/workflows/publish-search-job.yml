name: Publish search job
on:
  workflow_call:
    inputs:
      job_name:
        required: true
        type: string
      java_version:
        required: true
        type: string
      fetch_environment:
        required: false
        type: boolean
        default: false
    secrets:
      ARTIFACTORY_USER:
        required: true
      ARTIFACTORY_PASSWORD:
        required: true
      GH_PACKAGES_ATTRAQT_READ_ACCESS_TOKEN:
        required: true
      GCP_PUBLISHER_SERVICE_ACCOUNT_KEY:
        required: true

env:
  job_location: search-jobs
  global_job_name: search-jobs-${{ inputs.job_name }}

jobs:
  publish-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/**') }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.java_version }}

      # If develop branch, use 'testing' environment. If master branch and untagged, use 'staging' environment. Else, use 'production'
      - name: Get environment
        if: inputs.fetch_environment
        id: tag_env
        run: |
          echo "::set-output name=env::$(if [ '${{ github.ref }}' == 'refs/heads/develop' ]; then echo 'testing'; elif [ '${{ github.ref }}' == 'refs/heads/master' ]; then echo 'staging'; else echo 'production'; fi)"

      - name: Build jar
        run: |
          ./gradlew \
            -Partifactory.user=${{ secrets.ARTIFACTORY_USER }} \
            -Partifactory.password=${{ secrets.ARTIFACTORY_PASSWORD }} \
            -Pgpr.read.user=search \
            -Pgpr.read.key=${{ secrets.GH_PACKAGES_ATTRAQT_READ_ACCESS_TOKEN }} \
            ${{ env.job_location }}:${{ env.global_job_name }}:build --console=plain

      - uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_PUBLISHER_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Upload jar
        if: ${{ ! inputs.fetch_environment }}
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: ${{ env.job_location }}/${{ env.global_job_name }}/build/libs/${{ env.global_job_name }}-jar-with-dependencies.jar
          destination: eb-dataflow-eu/${{ env.global_job_name }}
          # When using gzip compression during upload, the stored MD5 & CRC32 of the file will be based on the gzipped data,
          # which breaks integrity checks when downloading the data without gzip
          # See: https://github.com/googleapis/nodejs-storage/issues/709
          gzip: false

      - name: Upload jar
        if: inputs.fetch_environment
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: ${{ env.job_location }}/${{ env.global_job_name }}/build/libs/${{ env.global_job_name }}-jar-with-dependencies.jar
          destination: eb-dataflow-eu/${{ env.global_job_name }}/${{ steps.tag_env.outputs.env }}
          # When using gzip compression during upload, the stored MD5 & CRC32 of the file will be based on the gzipped data,
          # which breaks integrity checks when downloading the data without gzip
          # See: https://github.com/googleapis/nodejs-storage/issues/709
          gzip: false