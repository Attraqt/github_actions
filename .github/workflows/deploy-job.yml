name: Deploy job
on:
  workflow_call:
    inputs:
      module_name:
        required: true
        type: string
      job_name:
        required: true
        type: string
    secrets:
      GCP_PUBLISHER_SERVICE_ACCOUNT_KEY:
        required: true
      GH_PACKAGES_READ_ACCESS_TOKEN:
        required: true
      GH_DEPLOYMENT_CREATION_ACCESS_TOKEN:
        required: true
      ARTIFACTORY_PASSWORD:
        required: false

env:
  job_location: ${{ inputs.module_name }}-jobs
  global_job_name: ${{ inputs.module_name }}-jobs-${{ inputs.job_name }}
  artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Fetch tag history
        run: git fetch --prune --unshallow
        if: github.ref == 'refs/heads/master'

      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/**') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_PUBLISHER_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - id: get_version_env
        name: Get job version and deployment env
        run: |
          echo "::set-output name=version::$([ '${{ github.ref }}' == 'refs/heads/master' ] && git rev-parse --short HEAD || ./gradlew --quiet --console=plain -Prelease.quiet ${{ env.job_location }}:${{ env.global_job_name }}:currentVersion )"
          echo "::set-output name=env::$([ '${{ github.ref }}' == 'refs/heads/master' ] && echo 'dev' || echo 'prod')"

      - name: Publish Dataflow Template
        if: ${{ env.artifactory_password == null }}
        run: >
          ./gradlew :${{ env.job_location }}:${{ env.global_job_name }}:run
          -Pgpr.read.user=${{ inputs.module_name }}
          -Pgpr.read.key=${{ secrets.GH_PACKAGES_READ_ACCESS_TOKEN }}
          --args="--runner=DataflowRunner --project=attraqt-xo --region=europe-west1 --stagingLocation=gs://xo-dataflow/staging --tempLocation=gs://xo-dataflow/tmp --templateLocation=gs://xo-dataflow/templates/${{ env.global_job_name }}/${{ steps.get_version_env.outputs.version }}"

      - name: Publish Dataflow Template
        if: ${{ env.artifactory_password != null }}
        run: >
          ./gradlew :${{ env.job_location }}:${{ env.global_job_name }}:run
          -Pgpr.read.user=${{ inputs.module_name }}
          -Pgpr.read.key=${{ secrets.GH_PACKAGES_READ_ACCESS_TOKEN }}
          -Partifactory.user=travis-npm
          -Partifactory.password=${{ secrets.ARTIFACTORY_PASSWORD }}
          --args="--runner=DataflowRunner --project=attraqt-xo --region=europe-west1 --stagingLocation=gs://xo-dataflow/staging --tempLocation=gs://xo-dataflow/tmp --templateLocation=gs://xo-dataflow/templates/${{ env.global_job_name }}/${{ steps.get_version_env.outputs.version }}"

      - name: Deploy on dev environment
        uses: maxkomarychev/oction-create-deployment@v0.7.1
        with:
          repo: xo-terragrunt-${{ steps.get_version_env.outputs.env }}
          ref: master
          environment: ${{ steps.get_version_env.outputs.env }}
          token: ${{ secrets.GH_DEPLOYMENT_CREATION_ACCESS_TOKEN }}
          task: ${{ env.global_job_name }}:${{ steps.get_version_env.outputs.version }}
          required_contexts: <<EMPTY>>